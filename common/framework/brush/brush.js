!function(){function t(t,e,s,o,r){if(Math.abs(t.x-s.x)<r&&Math.abs(t.y-s.y)<r)return!0;if(Math.abs(e.x-o.x)<r&&Math.abs(e.y-o.y)<r)return!0;var i=(t.x-s.x)*(e.y-s.y)-(t.y-s.y)*(e.x-s.x),n=(t.x-o.x)*(e.y-o.y)-(t.y-o.y)*(e.x-o.x);if(i*n>=0)return!1;var a=(s.x-t.x)*(o.y-t.y)-(s.y-t.y)*(o.x-t.x),h=a+i-n;return a*h>=0?!1:!0}var e=cc.Sprite.extend({_state_Brush:"brush",_state_Eraser:"eraser",state:null,strokes:[],isEnable:!0,options:{width:500,height:500,backgroundColor:"#FFFFFF",brushColor:"#000000",lineWidth:5,isOpacity:!1,eraserWidth:5},ctor:function(t){cc.extend(this.options,t),this.state=this._state_Brush,this._super(),this.init()},init:function(){this.layer=new cc.LayerColor(cc.color(this.options.backgroundColor),this.options.width,this.options.height),this.addChild(this.layer),this.options.isOpacity&&(this.layer.opacity=0),this.drawNode=new cc.DrawNode,this.addChild(this.drawNode),this.drawNode.setDrawColor(cc.color(this.options.brushColor)),this.drawNode.setLineWidth(this.options.lineWidth),this.eraserNode=new cc.DrawNode,this.addChild(this.eraserNode),this.eraserNode.setDrawColor(cc.color(0,0,0,0)),this.eraserNode.setLineWidth(this.options.eraserWidth),this.addEvent_layer()},addEvent_layer:function(){var t=this,e=cc.EventListener.create({event:cc.EventListener.TOUCH_ONE_BY_ONE,swallowTouches:!1,onTouchBegan:function(e,s){var o=e.getLocation(),r=s.getCurrentTarget();return t.visible&&t.isEnable&&cc.rectContainsPoint(r.getBoundingBoxToWorld(),o)?(t.beganPos=r.convertToNodeSpace(o),t.strokes.push([]),!0):!1},onTouchMoved:function(e,s){var o=e.getLocation();t.isCanDraw(o)&&t.brushMoved(o,s.getCurrentTarget())},onTouchEnded:function(e,s){var o=t.strokes[t.strokes.length-1];0==o.length?t.strokes.pop():t.addToContentList(o)}});cc.eventManager.addListener(e,t.layer)},brushMoved:function(t,e){if(this.beganPos)if(cc.rectContainsPoint(e.getBoundingBoxToWorld(),t))switch(this.state){case this._state_Brush:this.endedPos=e.convertToNodeSpace(t),this.drawNode.drawSegment(this.beganPos,this.endedPos),this.beganPos=this.endedPos,this.strokes[this.strokes.length-1].push(this.drawNode._buffer[this.drawNode._buffer.length-1]);break;case this._state_Eraser:this.endedPos=e.convertToNodeSpace(t),this.eraserNode.drawSegment(this.beganPos,this.endedPos),this.beganPos=this.endedPos,this.eraseDrawNode()}else this.beganPos=null},eraseDrawNode:function(){var e=this;this.eraserNode._buffer.forEach(function(s,o){e.drawNode._buffer.forEach(function(o,r){t(s.verts[0],s.verts[1],o.verts[0],o.verts[1],e.options.eraserWidth)&&e.drawNode._buffer.splice(r,1)}),e.eraserNode._buffer.splice(o,1)})},setBrushColor:function(t){cc.isString(t)?(this.options.brushColor=t,this.drawNode.setDrawColor(cc.color(this.options.brushColor))):cc.isObject(t)&&(this.options.brushColor="",this.drawNode.setDrawColor(t))},getBrushColor:function(){return this.drawNode.getDrawColor()},getBrushColorValue:function(){return this.options.brushColor},setLineWidth:function(t){this.options.lineWidth=t,this.drawNode.setLineWidth(this.options.lineWidth)},setBrushEnable:function(t){this.isEnable=t},setBrushState:function(){this.state=this._state_Brush},setEraserState:function(){this.state=this._state_Eraser},drawClear:function(){this.drawNode.clear()},drawPrevious:function(){var t=this,e=this.strokes.pop();e&&e.forEach(function(e){t.drawNode._buffer.pop()})},isCanDraw:function(t){return!0},addToContentList:function(t){}});window.BrushLayer=e}();